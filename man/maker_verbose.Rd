% Generated by roxygen2 (4.0.2): do not edit by hand
\name{maker_verbose}
\alias{maker_verbose}
\title{Control maker verbosity}
\usage{
maker_verbose(verbose = getOption("maker.verbose", TRUE),
  noop = getOption("maker.verbose.noop", TRUE),
  command = getOption("maker.verbose.command", TRUE),
  command_abbreviate = TRUE, target = NULL)
}
\arguments{
\item{verbose}{Print progress at each step that maker does
something.}

\item{noop}{Print progress for steps that are non-operations, such
as targets that need nothing done to them.  Setting this to
\code{FALSE} is useful for very large projects.}

\item{command}{Print the command along with the progress
information?  This is only printed when maker actually runs
something.}

\item{command_abbreviate}{Abbreviate the command information so
that it fits on one line.  If \code{FALSE} then the command will
be allowed to run on for as many lines as required.}

\item{target}{Print information that the target produces (via
\code{message}, \code{cat} or \code{print}).  If \code{FALSE} then
these messages will be suppressed.}
}
\description{
Helper function to set options for verbosity.
}
\details{
The first four options have a natural nesting: setting
\code{progress=FALSE} prevents printing any progress information,
so the value of \code{noop}, \code{command} and
\code{command_abbreviate} does not matter.  Similarly, setting
\code{command=FALSE} means that \code{command_abbreviate} does not
matter.
}

